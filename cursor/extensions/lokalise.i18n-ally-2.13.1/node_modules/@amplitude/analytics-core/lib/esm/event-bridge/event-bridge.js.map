{"version":3,"file":"event-bridge.js","sourceRoot":"","sources":["../../../src/event-bridge/event-bridge.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAE5D;IAAA;QACE,wBAAmB,GAAmD,EAAE,CAAC;IAe3E,CAAC;IAbC,+BAAS,GAAT,UAAU,OAAe,EAAE,KAAY;QACrC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE;YACtC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACrE;QACA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAwB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC7E,CAAC;IAED,iCAAW,GAAX,UAAY,OAAe,EAAE,QAA6B;QACxD,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE;YACtC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACrE;QACA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAClF,CAAC;IACH,kBAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["import { Event, EventBridgeReceiver, EventBridge as IEventBridge } from '@amplitude/analytics-types';\nimport { EventBridgeChannel } from './event-bridge-channel';\n\nexport class EventBridge implements IEventBridge {\n  eventBridgeChannels: Record<string, EventBridgeChannel | undefined> = {};\n\n  sendEvent(channel: string, event: Event) {\n    if (!this.eventBridgeChannels[channel]) {\n      this.eventBridgeChannels[channel] = new EventBridgeChannel(channel);\n    }\n    (this.eventBridgeChannels[channel] as EventBridgeChannel).sendEvent(event);\n  }\n\n  setReceiver(channel: string, receiver: EventBridgeReceiver) {\n    if (!this.eventBridgeChannels[channel]) {\n      this.eventBridgeChannels[channel] = new EventBridgeChannel(channel);\n    }\n    (this.eventBridgeChannels[channel] as EventBridgeChannel).setReceiver(receiver);\n  }\n}\n"]}