{"version":3,"file":"event-bridge-channel.js","sourceRoot":"","sources":["../../../src/event-bridge/event-bridge-channel.ts"],"names":[],"mappings":";AAEA,IAAM,cAAc,GAAG,GAAG,CAAC;AAE3B;IAKE,4BAAY,OAAe;QAH3B,UAAK,GAAY,EAAE,CAAC;QAIlB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,sCAAS,GAAT,UAAU,KAAY;QACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,KAAK,0CAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,YAAE,KAAK,SAAC,CAAC;YAC7D,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,wCAAW,GAAX,UAAY,QAA6B;QAAzC,iBAUC;QATC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;YAClB,KAAI,CAAC,QAAgC,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IACH,yBAAC;AAAD,CAAC,AA5BD,IA4BC","sourcesContent":["import { Event, EventBridgeReceiver } from '@amplitude/analytics-types';\n\nconst QUEUE_CAPACITY = 512;\n\nexport class EventBridgeChannel {\n  channel: string;\n  queue: Event[] = [];\n  receiver: EventBridgeReceiver | undefined;\n\n  constructor(channel: string) {\n    this.channel = channel;\n  }\n\n  sendEvent(event: Event) {\n    if (!this.receiver) {\n      this.queue = [...this.queue.slice(0, QUEUE_CAPACITY), event];\n      return;\n    }\n    this.receiver.receive(this.channel, event);\n  }\n\n  setReceiver(receiver: EventBridgeReceiver) {\n    if (this.receiver) {\n      return;\n    }\n    this.receiver = receiver;\n    const events = this.queue;\n    this.queue = [];\n    events.forEach((event) => {\n      (this.receiver as EventBridgeReceiver).receive(this.channel, event);\n    });\n  }\n}\n"]}