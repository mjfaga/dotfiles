Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
var tslib_1 = require("tslib");
var analytics_types_1 = require("@amplitude/analytics-types");
var analytics_core_1 = require("@amplitude/analytics-core");
var version_1 = require("../version");
var Context = /** @class */ (function () {
    function Context() {
        this.name = 'context';
        this.type = analytics_types_1.PluginType.BEFORE;
        this.eventId = 0;
        this.library = "amplitude-node-ts/".concat(version_1.VERSION);
    }
    Context.prototype.setup = function (config) {
        this.config = config;
        return Promise.resolve(undefined);
    };
    Context.prototype.execute = function (context) {
        var _this = this;
        return new Promise(function (resolve) {
            var time = new Date().getTime();
            var contextEvent = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ time: time, insert_id: (0, analytics_core_1.UUID)(), plan: _this.config.plan }, (_this.config.ingestionMetadata && {
                ingestion_metadata: {
                    source_name: _this.config.ingestionMetadata.sourceName,
                    source_version: _this.config.ingestionMetadata.sourceVersion,
                },
            })), context), { event_id: _this.eventId++, library: _this.library });
            return resolve(contextEvent);
        });
    };
    return Context;
}());
exports.Context = Context;
//# sourceMappingURL=context.js.map