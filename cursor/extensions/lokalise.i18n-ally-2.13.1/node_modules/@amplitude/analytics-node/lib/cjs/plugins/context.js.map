{"version":3,"file":"context.js","sourceRoot":"","sources":["../../../src/plugins/context.ts"],"names":[],"mappings":";;;AAAA,8DAAyF;AACzF,4DAAiD;AACjD,sCAAqC;AAErC;IAAA;QACE,SAAI,GAAG,SAAS,CAAC;QACjB,SAAI,GAAG,4BAAU,CAAC,MAAe,CAAC;QAMlC,YAAO,GAAG,CAAC,CAAC;QACZ,YAAO,GAAG,4BAAqB,iBAAO,CAAE,CAAC;IA4B3C,CAAC;IA1BC,uBAAK,GAAL,UAAM,MAAkB;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,yBAAO,GAAP,UAAQ,OAAc;QAAtB,iBAoBC;QAnBC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;YACzB,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAElC,IAAM,YAAY,wDAChB,IAAI,MAAA,EACJ,SAAS,EAAE,IAAA,qBAAI,GAAE,EACjB,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,IACnB,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,IAAI;gBACnC,kBAAkB,EAAE;oBAClB,WAAW,EAAE,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,UAAU;oBACrD,cAAc,EAAE,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,aAAa;iBAC5D;aACF,CAAC,GACC,OAAO,KACV,QAAQ,EAAE,KAAI,CAAC,OAAO,EAAE,EACxB,OAAO,EAAE,KAAI,CAAC,OAAO,GACtB,CAAC;YACF,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACH,cAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,0BAAO","sourcesContent":["import { BeforePlugin, NodeConfig, Event, PluginType } from '@amplitude/analytics-types';\nimport { UUID } from '@amplitude/analytics-core';\nimport { VERSION } from '../version';\n\nexport class Context implements BeforePlugin {\n  name = 'context';\n  type = PluginType.BEFORE as const;\n\n  // this.config is defined in setup() which will always be called first\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  config: NodeConfig;\n  eventId = 0;\n  library = `amplitude-node-ts/${VERSION}`;\n\n  setup(config: NodeConfig): Promise<undefined> {\n    this.config = config;\n    return Promise.resolve(undefined);\n  }\n\n  execute(context: Event): Promise<Event> {\n    return new Promise((resolve) => {\n      const time = new Date().getTime();\n\n      const contextEvent: Event = {\n        time,\n        insert_id: UUID(),\n        plan: this.config.plan,\n        ...(this.config.ingestionMetadata && {\n          ingestion_metadata: {\n            source_name: this.config.ingestionMetadata.sourceName,\n            source_version: this.config.ingestionMetadata.sourceVersion,\n          },\n        }),\n        ...context,\n        event_id: this.eventId++,\n        library: this.library,\n      };\n      return resolve(contextEvent);\n    });\n  }\n}\n"]}